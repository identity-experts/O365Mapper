<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="credentials" xml:space="preserve">
    <value>Credential</value>
  </data>
  <data name="credential_page_header" xml:space="preserve">
    <value>Manage Credentials (Default)</value>
  </data>
  <data name="credential_password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="credential_username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="emailvalidation" xml:space="preserve">
    <value>Please enter valid email address</value>
  </data>
  <data name="passwordcannotbeblank" xml:space="preserve">
    <value>Password cannot be blank</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>365Mapper</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="NocredMessage" xml:space="preserve">
    <value>We need to authenticate to get started. Click here to authenticate.</value>
  </data>
  <data name="CredentialNotPresent" xml:space="preserve">
    <value>Credentials not present, please authenticate to proceed.</value>
  </data>
  <data name="CredentialsPresent" xml:space="preserve">
    <value>Credentials present, moving to verify license</value>
  </data>
  <data name="EnsuringCredential" xml:space="preserve">
    <value>Ensuring credentials exist or not. If not, will propmt for it</value>
  </data>
  <data name="GettingDriveDetails" xml:space="preserve">
    <value>Fetching mappable drive details</value>
  </data>
  <data name="Initializing" xml:space="preserve">
    <value>Intializing 365Mapper</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Either credentials not valid or your IT admin has not granted 365 Access to 365Mapper app</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About: </value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>© Identity Experts Software Ltd.</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="DriveDetailsFound" xml:space="preserve">
    <value>Drive details fetched from IE licensing server</value>
  </data>
  <data name="LicenseFoundOK" xml:space="preserve">
    <value>Your license information found OK</value>
  </data>
  <data name="MappingDrives" xml:space="preserve">
    <value>Mapping drives....</value>
  </data>
  <data name="AllDrivesMapped" xml:space="preserve">
    <value>All drives mapped</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitSure" xml:space="preserve">
    <value>Exiting application will unmap (if any) all mapped drives, are you sure you want to exit application? </value>
  </data>
  <data name="GettingoneDriveUrl" xml:space="preserve">
    <value>OneDrive for business found to be mapped, getting its url...</value>
  </data>
  <data name="DotNetVersion" xml:space="preserve">
    <value>.NET Version</value>
  </data>
  <data name="EnsuringInternet" xml:space="preserve">
    <value>Ensuring internet access..</value>
  </data>
  <data name="EnsuringwebClient" xml:space="preserve">
    <value>Ensuring webClient service is running or not..</value>
  </data>
  <data name="InternetConnection" xml:space="preserve">
    <value>Internet</value>
  </data>
  <data name="LicenseCouldNotVerified" xml:space="preserve">
    <value>We could not verify the license details, 365Mapper will attempt again in few seconds</value>
  </data>
  <data name="LicenseExpired" xml:space="preserve">
    <value>Licenses expired or exceeded limit. Contact IT team.</value>
  </data>
  <data name="LicenseValidationFailed" xml:space="preserve">
    <value>License Validation Failed</value>
  </data>
  <data name="Nodotnet45" xml:space="preserve">
    <value>We need .NET framework 4.5 or higher to proceed.</value>
  </data>
  <data name="NoInternet" xml:space="preserve">
    <value>Oops! looks like you don't have working internet connection, waiting to get back...</value>
  </data>
  <data name="webClient" xml:space="preserve">
    <value>WebClient Service</value>
  </data>
  <data name="webClientNotRunning" xml:space="preserve">
    <value>WebClient service is not running, click here for help starting it.</value>
  </data>
  <data name="AuthenticationTypeNotSupported" xml:space="preserve">
    <value>We do not support the authentication type set to your office 365 tenancy. please check with Identity Experts support team.</value>
  </data>
  <data name="Federation" xml:space="preserve">
    <value>Authentication Method</value>
  </data>
  <data name="SignoutSure" xml:space="preserve">
    <value>Signing out application will unmap all mapped drives and clear all locally saved settings, are you sure you want to signout?</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Signout</value>
  </data>
  <data name="webClientHelp" xml:space="preserve">
    <value>Steps to automate WebClient service and start it{0}{0}

1. Click Start, click in the Start Search box, type services.msc, and then press ENTER.{0}
2. Optionally, export and save a list of the existing settings. To do this, right-click Services, select Export List, and save the settings list.{0}
3. In the details pane, right-click the service that you want to configure, and then click Properties.{0}
4. On the General tab, in Startup type, click Automatic.{0}
5. Click on Start button to start it.{0}
6. click OK</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="LicenseActivatedFirstTime" xml:space="preserve">
    <value>Your license has been activated.</value>
  </data>
  <data name="LicenseValidationFailedHeading" xml:space="preserve">
    <value>Failed to License</value>
  </data>
  <data name="TenancyNotRegistered" xml:space="preserve">
    <value>You need to register at Identity Experts to get started with 365Mapper.</value>
  </data>
  <data name="LicenseActivationFailed" xml:space="preserve">
    <value>License activation or verification failed ({0}).</value>
  </data>
</root>